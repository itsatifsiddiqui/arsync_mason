import 'package:firebase_auth/firebase_auth.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';

import '../../utils/utils.dart';
import '../alert_provider.dart';
import '../app_user_provider.dart';
import '../router_provider.dart';
import 'auth_base_notifier.dart';

final changePasswordProvider =
    StateNotifierProvider<ChangePasswordProvider, AsyncValue<void>>(
      (ref) => ChangePasswordProvider(ref),
    );

class ChangePasswordProvider extends AuthBaseNotifier<void> {
  ChangePasswordProvider(super.ref);

  Future<void> updateUserPassword(
    String currentPassword,
    String newPassword,
  ) async {
    try {
      state = const AsyncValue.loading();

      // Get current user
      final user = ref.watch(appUserProvider);
      if (user == null) {
        throw Exception('User not found');
      }

      final credential = EmailAuthProvider.credential(
        email: user.email,
        password: currentPassword,
      );

      await auth.currentUser?.reauthenticateWithCredential(credential);
      're authenticated'.log();

      // Update password
      await auth.currentUser?.updatePassword(newPassword);

      ref.showSuccessSnackBar('Password updated successfully');
      ref.read(routerProvider).navigateBasedAuthStatus();

      state = const AsyncValue.data(null);
    } catch (e, s) {
      handleError(e, s);
    }
  }
}
