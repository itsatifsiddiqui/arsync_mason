
import 'package:hooks_riverpod/hooks_riverpod.dart';

import '../../screens/auth/login_screen.dart';
import '../../utils/utils.dart';
import '../alert_provider.dart';
import '../router_provider.dart';
import 'auth_base_notifier.dart';

final forgotPasswordProvider =
    StateNotifierProvider<ForgotPasswordNotifier, AsyncValue<void>>(
      (ref) => ForgotPasswordNotifier(ref),
    );

class ForgotPasswordNotifier extends AuthBaseNotifier<void> {
  ForgotPasswordNotifier(super.ref);

  Future<void> sendPasswordResetEmail(String email) async {
    state = const AsyncValue.loading();

    try {
      await auth.sendPasswordResetEmail(email: email);
      final alert = ref.read(alertProvider);
      alert.showSuccessSheet(
        iconColor: AppColors.primary,
        title: 'Password reset email sent successfully',
        message:
            "We've sent a password reset link to $email. Click the link in the email to create a new password. Remember to check your spam folder if you don't see the email.",
        positiveButtonText: 'Back To Log In',
        onPositiveAction: () {
          ref.read(routerProvider).router.goNamed(LoginScreen.routeName);
        },
      );
      state = const AsyncValue.data(null);
    } catch (e, s) {
      handleError(e, s);
    }
  }
}